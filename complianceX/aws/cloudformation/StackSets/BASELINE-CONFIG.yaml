AWSTemplateFormatVersion: 2010-09-09
Description: Configure AWS Config

Parameters:
  ManagedResourcePrefix:
    Type: 'String'
    Description: 'Prefix for the managed resources'

  AllSupported:
    Type: String
    Default: 'true'
    Description: Indicates whether to record all supported resource types.
    AllowedValues:
      - 'true'
      - 'false'
  ConfigRecording:
    Type: String
    Default: 'OFF'
    Description: Indicates whether to recording is on or off.
    AllowedValues:
      - 'ON'
      - 'OFF'

  IncludeGlobalResourceTypes:
    Type: String
    Default: 'true'
    Description: Indicates whether AWS Config records all supported global resource types.
    AllowedValues:
      - 'true'
      - 'false'

  ResourceTypes:
    Type: CommaDelimitedList
    Description: A list of valid AWS resource types to include in this recording group. Eg. AWS::CloudTrail::Trail

  Frequency:
    Type: String
    Default: 1hour
    Description: The frequency with which AWS Config delivers configuration snapshots.
    AllowedValues:
      - 1hour
      - 3hours
      - 6hours
      - 12hours
      - 24hours

  AllConfigTopicName:
    Type: String
    Default: ''
    Description: All Configuration Notification SNS Topic in Security Account that AWS Config delivers notifications to.

  SecurityAccountId:
    Type: 'String'
    Description: AWS Account Id of the Security account.

  AuditBucketName:
    Type: String
    Default: ''
    Description: Audit Bucket name from the Log Archive Account

  AWSLogsS3KeyPrefix:
    Type: 'String'
    Description: Organization ID to use as the S3 Key prefix for storing the audit logs

  HomeRegionName:
    Type: 'String'
    Description: The name of the home region for the customer

  IsHomeRegionInitialControlTowerRegion:
    Type: 'String'
    AllowedValues:
       - 'true'
       - 'false'
    Description: Indicates whether the Home Region of the customer is one of the initial regions in which AWS Control Tower launched.

Conditions:
  IsAllSupported: !Equals
    - !Ref AllSupported
    - 'true'

  RecordingON: !Equals
   -  !Ref ConfigRecording
   -  'ON'

  CreateHomeRegionConfigAggregatorAuthorization: !Equals
   -  !Ref IsHomeRegionInitialControlTowerRegion
   -  'false'

  CreateRegionalConfigAggregatorAuthorization: !Equals
   -  !Ref IsHomeRegionInitialControlTowerRegion
   -  'true'

Mappings:
  Settings:
    FrequencyMap:
      1hour   : One_Hour
      3hours  : Three_Hours
      6hours  : Six_Hours
      12hours : Twelve_Hours
      24hours : TwentyFour_Hours

Resources:
  ConfigRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Condition: RecordingON
    Properties:
      Name: !Sub ${ManagedResourcePrefix}-BaselineConfigRecorder
      RoleARN: !GetAtt ConfigRecorderRole.Arn
      RecordingGroup:
        AllSupported: !Ref AllSupported
        IncludeGlobalResourceTypes: !Ref IncludeGlobalResourceTypes
        ResourceTypes: !If
          - IsAllSupported
          - !Ref AWS::NoValue
          - !Ref ResourceTypes

  ConfigRecorderRole:
    Type: AWS::IAM::Role
    Condition: RecordingON
    Properties:
      RoleName: !Sub ${ManagedResourcePrefix}-ConfigRecorderRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - config.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWS_ConfigRole
        - arn:aws:iam::aws:policy/ReadOnlyAccess


  ConfigDeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    Condition: RecordingON
    Properties:
      Name: !Sub ${ManagedResourcePrefix}-BaselineConfigDeliveryChannel
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: !FindInMap
          - Settings
          - FrequencyMap
          - !Ref Frequency
      S3BucketName: !Ref AuditBucketName
      S3KeyPrefix: !Ref AWSLogsS3KeyPrefix
      SnsTopicARN: !Sub arn:aws:sns:${AWS::Region}:${SecurityAccountId}:${AllConfigTopicName}

  AuthorizerPdx:
    Condition: CreateRegionalConfigAggregatorAuthorization
    Type: "AWS::Config::AggregationAuthorization"
    Properties:
      AuthorizedAccountId: !Ref SecurityAccountId
      AuthorizedAwsRegion: us-west-2
  AuthorizerIad:
    Condition: CreateRegionalConfigAggregatorAuthorization
    Type: "AWS::Config::AggregationAuthorization"
    Properties:
      AuthorizedAccountId: !Ref SecurityAccountId
      AuthorizedAwsRegion: us-east-1
  AuthorizerCmh:
    Condition: CreateRegionalConfigAggregatorAuthorization
    Type: "AWS::Config::AggregationAuthorization"
    Properties:
      AuthorizedAccountId: !Ref SecurityAccountId
      AuthorizedAwsRegion: us-east-2
  AuthorizerDub:
    Condition: CreateRegionalConfigAggregatorAuthorization
    Type: "AWS::Config::AggregationAuthorization"
    Properties:
      AuthorizedAccountId: !Ref SecurityAccountId
      AuthorizedAwsRegion: eu-west-1
  AuthorizerSyd:
    Condition: CreateRegionalConfigAggregatorAuthorization
    Type: "AWS::Config::AggregationAuthorization"
    Properties:
      AuthorizedAccountId: !Ref SecurityAccountId
      AuthorizedAwsRegion: ap-southeast-2

Outputs:
  BaselineConfigRecorder:
    Condition: RecordingON
    Description: Baseline Config Recorder
    Value:  !Ref ConfigRecorder
  BaselineConfigDeliveryChannel:
    Condition: RecordingON
    Description: Baseline Config Delivery Channel
    Value: !Ref ConfigDeliveryChannel
